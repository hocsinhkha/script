local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
   Name = "+1 Every Second‚≠ê This game has a good anticheat!" ,
   LoadingTitle = "VERSION 1",
   LoadingSubtitle = "by NamesofUsernames",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD.
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Sirius Hub",
      Subtitle = "Key System",
      Note = "Join the discord (discord.gg/sirius)",
      FileName = "SiriusKey",
      SaveKey = true,
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = "Hello"
   }
})

local Tab = Window:CreateTab("Autofarm", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Autofarm")

local Toggle = Tab:CreateToggle({
   Name = "Jump autofarm 1",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Jump1.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.5)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Jump autofarm 2 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Jump2.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.5)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Jump autofarm 3 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Jump3.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.5)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Speed autofarm 1 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Speed1.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.5)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Speed autofarm 2 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Speed2.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.5)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Speed autofarm 3 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Speed3.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.2)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Damage 1 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Damage1.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.2)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Damage 2 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Damage2.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.2)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Damage 3 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Damage3.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.2)
end

   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Speed autofarm 3 (NEEDS TO BE PURCHASED)",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Maps.Speed3.Games.Wins.Win.Button
local stageCFrame = stage.CFrame
while true do
player.Character:SetPrimaryPartCFrame(stageCFrame)
wait(0.2)
end

   end,
})


local Tab = Window:CreateTab("Teleports", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Rebirth")

local Button = Tab:CreateButton({
   Name = "Rebirth Stage",
   Callback = function()

local player = game:GetService("Players").LocalPlayer
local stage = game:GetService("Workspace").Respawn.Rebirth
local stageCFrame = stage.CFrame
   player.Character:SetPrimaryPartCFrame(stageCFrame)
   end,
   
   
})

local Tab = Window:CreateTab("Extra", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Player")

local mouse = Tab:CreateSlider({
	Name = "Speed",
	Range = {20, 200},
	Increment = 10,
	Suffix = "Speed",
	CurrentValue = 20,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(s)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
	end,
})


local mouse = Tab:CreateSlider({
	Name = "Jump",
	Range = {50, 500},
	Increment = 10,
	Suffix = "Jump",
	CurrentValue = 20,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(s)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
	end,
})

local Tab = Window:CreateTab("Credits", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Credits")
local Label = Tab:CreateLabel("Everything - namesofusernames")
